[versions]

accompanist = "0.28.0"
android = "8.0.0-beta01"
android-desugar = "1.1.5"
android-tools = "31.0.0-beta01" # formula: 23 + agp version
androidx = "1.4.0"
androidx-activity = "1.6.0"
androidx-annotation = "1.5.0"
androidx-appcompat = "1.5.1"
androidx-arch-core-testing = "2.1.0"
androidx-compose-bom = "2023.01.00"
androidx-compose-compiler = "1.4.0"
androidx-constraintlayout = "2.1.4"
androidx-core = "1.9.0"
androidx-core-animation = "1.0.0-beta01"
androidx-core-google-shortcuts = "1.0.1"
androidx-core-performance = "1.0.0-alpha02"
androidx-core-remoteviews = "1.0.0"
androidx-core-role = "1.0.0"
androidx-datastore = "1.0.0"
androidx-emoji2 = "1.2.0"
androidx-fragment = "1.5.3"
androidx-hilt = "1.0.0"
androidx-lifecycle = "2.5.1" # "2.6.0-alpha01"
androidx-metrics = "1.0.0-alpha03"
androidx-navigation = "2.5.2"
androidx-paging = "3.1.1"
androidx-paging-compose = "1.0.0-alpha17"
androidx-preference = "1.2.0"
androidx-recyclerview = "1.1.0"
androidx-sqlite = "2.2.0"
androidx-startup = "1.1.1"
androidx-swiperefreshlayout = "1.1.0"
androidx-test = "1.4.0"
androidx-test-espresso = "3.4.0"
androidx-test-ext-junit = "1.1.3"
androidx-test-ext-truth = "1.4.0"
androidx-test-monitor = "1.5.0"
androidx-test-orchestrator = "1.4.1"
androidx-test-uiautomator = "2.3.0-alpha01"
androidx-work = "2.7.1"
apache-commons-lang = "3.8.1"
apache-commons-text = "1.6"
assertj-core = "3.23.1"
atomicfu = "0.17.2"
auth-library = "0.10.0"
binary-compatibility-validator = "0.11.1"
coil = "2.2.1"
collections-immutable = "0.3.5"
commons-configuration = "1.10"
commons-io = "2.7"
coroutines = "1.6.4"
datetime = "0.4.0"
decompose = "1.0.0-alpha-06-native-compose"
dependency-analysis = "1.13.1"
desugar-jdk-libs = "2.0.0"
detekt = "1.21.0-RC2"
espresso = "3.4.0"
espresso-descendan = "1.4.0"
espresso-descendant-actions = "1.4.0"
essenty = "0.6.0"
google-auto-service = "1.0.1"
gradle-publish = "1.0.0-rc-3"
gradle-versions = "0.43.0"
gson = "2.8.9"
guava = "31.1-android"
hilt = "2.44"
jetbrains-compose = "1.3.0-rc05"
jetbrains-intellij = "1.9.0"
junit = "4.13"
junit-bom = "5.9.1"
junit-jupiter = "5.9.1"
junit-platform = "1.9.1"
junit-vintage = "5.9.1"
koin = "3.2.2"
koin-androidx-compose = "3.2.1"
koin-annotations = "1.0.3"
kotlin = "1.8.0"
kotlin-html =  "0.7.5"
kotlin-wrappers = "1.0.0-pre.392"
kotlinpoet = "1.12.0"
kotlinx-nodejs="0.0.7"
ksp = "1.8.0-1.0.8"
ktor = "2.1.3"
lwjgl = "3.3.1"
joml = "1.10.5"
material = "1.6.1"
mockito-junit-jupiter = "3.3.3"
mockito-kotlin = "2.2.0"
moshi = "1.13.0"
multiplatform-settings = "1.0.0-alpha01"
napier = "2.6.1"
okhttp = "4.9.0"
okhttp-mock = "1.4.0"
okio = "2.7.0"
play-app-update = "2.0.0"
play-core = "1.10.3"
play-services-base = "17.0.0"
radiography = "2.4.1"
reflect-lite = "1.1.0"
retrofit = "2.9.0"
robolectric = "4.7.3"
sdk-buildtools = "33.0.0"
sdk-compile = "33"
sdk-min = "26"
sdk-target = "33"
serialization = "1.4.0"
slf4j = "2.0.3"
skiko = "0.0.7.44.2"
sqldelight = "1.5.3"
truth = "1.0"
tschuchortdev-kotlin-compile-testing = "1.4.9"
turbine = "0.10.0"
voyager = "1.0.0-rc02"
xmlunit = "2.9.0"


[plugins]

android-application = { id = "com.android.application", version.ref = "android" }
android-feature = { id = "com.android.dynamic-feature", version.ref = "android" }
android-library = { id = "com.android.library", version.ref = "android" }
android-test = { id = "com.android.test", version.ref = "android" }
androidx-navigation-safeargs = { id = "androidx.navigation.safeargs", version.ref = "androidx-navigation" }
androidx-navigation-safeargs-kotlin = { id = "androidx.navigation.safeargs.kotlin", version.ref = "androidx-navigation" }
atomicfu = { id = "kotlinx-atomicfu", version.ref = "atomicfu" }
binary-compatibility-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binary-compatibility-validator" }
dependency-analysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependency-analysis" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
gradle-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-publish" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }
jetbrains-dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin" }
jetbrains-intellij = { id = "org.jetbrains.intellij", version.ref = "jetbrains-intellij" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-js = { id = "org.jetbrains.kotlin.js", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-plugin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
kotlin-plugin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-plugin-samwithreceiver = { id = "org.jetbrains.kotlin.plugin.sam.with.receiver", version.ref = "kotlin" }
kotlinpoet = { id = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }

[libraries]

skiko-macos-x64 = { module = "org.jetbrains.skiko:skiko-awt-runtime-macos-x64", version.ref = "skiko" }
joml = { module = "org.joml:joml", version.ref = "joml" }
lwjgl-bom = { module = "org.lwjgl:lwjgl-bom", version.ref = "lwjgl" }
accompanist-appcompat-theme = { module = "com.google.accompanist:accompanist-appcompat-theme", version.ref = "accompanist" }
accompanist-drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" } # deprecated
accompanist-insets-ui = { module = "com.google.accompanist:accompanist-insets-ui", version.ref = "accompanist" }
accompanist-navigation-animation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist-navigation-material = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanist" }
accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist-pager-indicators = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "accompanist" }
accompanist-placeholder-material = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-swiperefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
android-tools-annotations = { module = "com.android.tools:annotations", version.ref = "android-tools" }
android-tools-common = { module = "com.android.tools:common", version.ref = "android-tools" }
android-tools-ddmlib = { module = "com.android.tools.ddms:ddmlib", version.ref = "android-tools" }
android-tools-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugar" }
android-tools-layoutlib-api = { module = "com.android.tools.layoutlib:layoutlib-api", version.ref = "android-tools" }
android-tools-lint = { module = "com.android.tools.lint:lint", version.ref = "android-tools" }
android-tools-lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "android-tools" }
android-tools-lint-checks = { module = "com.android.tools.lint:lint-checks", version.ref = "android-tools" }
android-tools-lint-tests = { module = "com.android.tools.lint:lint-tests", version.ref = "android-tools" }
android-tools-sdk-common = { module = "com.android.tools:sdk-common", version.ref = "android-tools" }
androidx-activity = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-arch-core-runtime = { module = "androidx.arch.core:core-runtime", version.ref = "androidx-core" }
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidx-arch-core-testing" }
androidx-compose-animation = { module = "androidx.compose.animation:animation" }
androidx-compose-animation-core = { module = "androidx.compose.animation:animation-core" }
androidx-compose-animation-graphics = { module = "androidx.compose.animation:animation-graphics" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-compose-bom" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "androidx-compose-compiler" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout" }
androidx-compose-material = { module = "androidx.compose.material:material" }
androidx-compose-material-icons-core = { module = "androidx.compose.material:material-icons-core" }
androidx-compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
androidx-compose-material-ripple = { module = "androidx.compose.material:material-ripple" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime" }
androidx-compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
androidx-compose-runtime-saveable = { module = "androidx.compose.runtime:runtime-saveable" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-geometry = { module = "androidx.compose.ui:ui-geometry" }
androidx-compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test" }
androidx-compose-ui-test-font = { module = "androidx.compose.ui:ui-test-font" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-ui-text = { module = "androidx.compose.ui:ui-text" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" } # debug
androidx-compose-ui-tooling-data = { module = "androidx.compose.ui:ui-tooling-data" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-ui-unit = { module = "androidx.compose.ui:ui-unit" }
androidx-compose-ui-util = { module = "androidx.compose.ui:ui-util" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }
androidx-core-animation = { module = "androidx.core:core-animation", version.ref = "androidx-core-animation" }
androidx-core-animation-testing = { module = "androidx.core:core-animation-testing", version.ref = "androidx-core-animation" }
androidx-core-google-shortcuts = { module = "androidx.core:core-google-shortcuts", version.ref = "androidx-core-google-shortcuts" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-core-performance = { module = "androidx.core:core-performance", version.ref = "androidx-core-performance" }
androidx-core-remoteviews = { module = "androidx.core:core-remoteviews", version.ref = "androidx-core-remoteviews" }
androidx-core-role = { module = "androidx.core:core-role", version.ref = "androidx-core-role" }
androidx-datastore = { module = "androidx.datastore:datastore", version.ref = "androidx-datastore" }
androidx-datastore-core = { module = "androidx.datastore:datastore-core", version.ref = "androidx-datastore" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }
androidx-datastore-preferences-core = { module = "androidx.datastore:datastore-preferences-core", version.ref = "androidx-datastore" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-fragment-testing = { module = "androidx.fragment:fragment-testing", version.ref = "androidx-fragment" }
androidx-hilt-common = { module = "androidx.hilt:hilt-common", version.ref = "androidx-hilt" }
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidx-hilt" }
androidx-hilt-navigation = { module = "androidx.hilt:hilt-navigation", version.ref = "androidx-hilt" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidx-hilt" }
androidx-hilt-navigation-fragment = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "androidx-hilt" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "androidx-hilt" }
androidx-lifecycle-common = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidx-lifecycle" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata", version.ref = "androidx-lifecycle" }
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidx-lifecycle" }
androidx-lifecycle-reactivestreams = { module = "androidx.lifecycle:lifecycle-reactivestreams", version.ref = "androidx-lifecycle" }
androidx-lifecycle-reactivestreams-ktx = { module = "androidx.lifecycle:lifecycle-reactivestreams-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
androidx-metrics-performance = { module = "androidx.metrics:metrics-performance", version.ref = "androidx-metrics" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
androidx-navigation-dynamic-features-fragment = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "androidx-navigation" }
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment", version.ref = "androidx-navigation" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-navigation-testing = { module = "androidx.navigation:navigation-testing", version.ref = "androidx-navigation" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui", version.ref = "androidx-navigation" }
androidx-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidx-navigation" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "androidx-paging-compose" }
androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "androidx-paging" }
androidx-paging-runtime-ktx = { module = "androidx.paging:paging-runtime-ktx", version.ref = "androidx-paging" }
androidx-preference = { module = "androidx.preference:preference", version.ref = "androidx-preference" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "androidx-preference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview" }
androidx-sqlite = { module = "androidx.sqlite:sqlite", version.ref = "androidx-sqlite" }
androidx-sqlite-framework = { module = "androidx.sqlite:sqlite-framework", version.ref = "androidx-sqlite" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "androidx-startup" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidx-swiperefreshlayout" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-core-ktx = { module = "androidx.test:core-ktx", version.ref = "androidx-test" }
androidx-test-espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref = "androidx-test-espresso" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
androidx-test-espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref = "androidx-test-espresso" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
androidx-test-ext-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-ext-junit" }
androidx-test-ext-truth = { module = "androidx.test.ext:truth", version.ref = "androidx-test-ext-truth" }
androidx-test-orchestrator = { module = "androidx.test:orchestrator", version.ref = "androidx-test-orchestrator" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "androidx-test-uiautomator" }
androidx-work-multiprocess = { module = "androidx.work:work-multiprocess", version.ref = "androidx-work" }
androidx-work-runtime = { module = "androidx.work:work-runtime", version.ref = "androidx-work" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidx-work" }
androidx-work-testing = { module = "androidx.work:work-testing", version.ref = "androidx-work" }
apache-commons-lang = { module = "org.apache.commons:commons-lang3", version.ref = "apache-commons-lang" }
apache-commons-text = { module = "org.apache.commons:commons-text", version.ref = "apache-commons-text" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj-core" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
auth-library = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "auth-library"  }
bom-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-bom", version.ref = "coroutines" }
bom-junit = { module = "org.junit:junit-bom", version.ref = "junit-bom" }
bom-kotlin = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
bom-kotlin-wrappers = { module = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom", version.ref = "kotlin-wrappers" }
bom-ktor = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "collections-immutable" }
commons-configuration = { module = "commons-configuration:commons-configuration", version.ref = "commons-configuration" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines" }
coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-android = { module = "com.arkivanov.decompose:extensions-android", version.ref = "decompose" }
decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }
decompose-jetpack = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }
detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt" }
detekt-cli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-descendant-actions = { module = "com.forkingcode.espresso.contrib:espresso-descendant-actions", version.ref = "espresso-descendant-actions" }
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espresso" }
espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref = "espresso" }
essenty-back-handler = { module = "com.arkivanov.essenty:back-handler", version.ref = "essenty" }
essenty-instance-keeper = { module = "com.arkivanov.essenty:instance-keeper", version.ref = "essenty" }
essenty-lifecycle = { module = "com.arkivanov.essenty:lifecycle", version.ref = "essenty" }
essenty-parcelable = { module = "com.arkivanov.essenty:parcelable", version.ref = "essenty" }
essenty-state-keeper = { module = "com.arkivanov.essenty:state-keeper", version.ref = "essenty" }
google-auto-service = { module = "com.google.auto.service:auto-service", version.ref = "google-auto-service" }
google-auto-service-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "google-auto-service" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
jetbrains-compose-animation = { module = "org.jetbrains.compose.animation:animation", version.ref = "jetbrains-compose" }
jetbrains-compose-animation-core = { module = "org.jetbrains.compose.animation:animation-core", version.ref = "jetbrains-compose" }
jetbrains-compose-animation-graphics = { module = "org.jetbrains.compose.animation:animation-graphics", version.ref = "jetbrains-compose" }
jetbrains-compose-desktop-common = { module = "org.jetbrains.compose.desktop:desktop", version.ref = "jetbrains-compose" }
jetbrains-compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "jetbrains-compose" }
jetbrains-compose-foundation-layout = { module = "org.jetbrains.compose.foundation:foundation-layout", version.ref = "jetbrains-compose" }
jetbrains-compose-foundation-text = { module = "org.jetbrains.compose.foundation:foundation-text", version.ref = "jetbrains-compose" }
jetbrains-compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "jetbrains-compose" }
jetbrains-compose-material-icons-core = { module = "org.jetbrains.compose.material:material-icons-core", version.ref = "jetbrains-compose" }
jetbrains-compose-material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "jetbrains-compose" }
jetbrains-compose-material-ripple = { module = "org.jetbrains.compose.material:material-ripple", version.ref = "jetbrains-compose" }
jetbrains-compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "jetbrains-compose" }
jetbrains-compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "jetbrains-compose" }
jetbrains-compose-runtime-dispatch = { module = "org.jetbrains.compose.runtime:runtime-dispatch", version.ref = "jetbrains-compose" }
jetbrains-compose-runtime-saveable = { module = "org.jetbrains.compose.runtime:runtime-saveable", version.ref = "jetbrains-compose" }
jetbrains-compose-runtime-saved-instance-state = { module = "org.jetbrains.compose.runtime:runtime-saved-instance-state", version.ref = "jetbrains-compose" }
jetbrains-compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-geometry = { module = "org.jetbrains.compose.ui:ui-geometry", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-graphics = { module = "org.jetbrains.compose.ui:ui-graphics", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-test = { module = "org.jetbrains.compose.ui:ui-test", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-test-font = { module = "org.jetbrains.compose.ui:ui-test-font", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-test-junit4 = { module = "org.jetbrains.compose.ui:ui-test-junit4", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-text = { module = "org.jetbrains.compose.ui:ui-text", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-tooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "jetbrains-compose" } # debug
jetbrains-compose-ui-tooling-data = { module = "org.jetbrains.compose.ui:ui-tooling-data", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-unit = { module = "org.jetbrains.compose.ui:ui-unit", version.ref = "jetbrains-compose" }
jetbrains-compose-ui-util = { module = "org.jetbrains.compose.ui:ui-util", version.ref = "jetbrains-compose" }
junit = { module = "junit:junit", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-migrationsupport = { module = "org.junit.jupiter:junit-jupiter-migrationsupport", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
junit-platform-commons = { module = "org.junit.platform:junit-platform-commons", version.ref = "junit-platform" }
junit-platform-console = { module = "org.junit.platform:junit-platform-console", version.ref = "junit-platform" }
junit-platform-console-standalone = { module = "org.junit.platform:junit-platform-console-standalone", version.ref = "junit-platform" }
junit-platform-engine = { module = "org.junit.platform:junit-platform-engine", version.ref = "junit-platform" }
junit-platform-jfr = { module = "org.junit.platform:junit-platform-jfr", version.ref = "junit-platform" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }
junit-platform-reporting = { module = "org.junit.platform:junit-platform-reporting", version.ref = "junit-platform" }
junit-platform-runner = { module = "org.junit.platform:junit-platform-runner", version.ref = "junit-platform" }
junit-platform-suite = { module = "org.junit.platform:junit-platform-suite", version.ref = "junit-platform" }
junit-platform-suite-api = { module = "org.junit.platform:junit-platform-suite-api", version.ref = "junit-platform" }
junit-platform-suite-commons = { module = "org.junit.platform:junit-platform-suite-commons", version.ref = "junit-platform" }
junit-platform-suite-engine = { module = "org.junit.platform:junit-platform-suite-engine", version.ref = "junit-platform" }
junit-platform-testkit = { module = "org.junit.platform:junit-platform-testkit", version.ref = "junit-platform" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit-vintage" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin-androidx-compose" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
kotlin-compiler = { module = "org.jetbrains.kotlin:kotlin-compiler", version.ref = "kotlin" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }
kotlin-compiler-internal-test-framework = { module = "org.jetbrains.kotlin:kotlin-compiler-internal-test-framework", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-gradle-plugin-api = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin-api", version.ref = "kotlin" }
kotlin-html = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlin-html" }
kotlin-main-kts = { module = "org.jetbrains.kotlin:kotlin-main-kts", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-script-runtime = { module = "org.jetbrains.kotlin:kotlin-script-runtime", version.ref = "kotlin" }
kotlin-scripting-common = { module = "org.jetbrains.kotlin:kotlin-scripting-common", version.ref = "kotlin" }
kotlin-scripting-dependencies = { module = "org.jetbrains.kotlin:kotlin-scripting-dependencies", version.ref = "kotlin" }
kotlin-scripting-dependencies-maven = { module = "org.jetbrains.kotlin:kotlin-scripting-dependencies-maven", version.ref = "kotlin" }
kotlin-scripting-dependencies-maven-all = { module = "org.jetbrains.kotlin:kotlin-scripting-dependencies-maven-all", version.ref = "kotlin" }
kotlin-scripting-intellij = { module = "org.jetbrains.kotlin:kotlin-scripting-intellij", version.ref = "kotlin" }
kotlin-scripting-jsr223 = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223", version.ref = "kotlin" }
kotlin-scripting-jsr223-embeddable = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223-embeddable", version.ref = "kotlin" }
kotlin-scripting-jsr223-test = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223-test", version.ref = "kotlin" }
kotlin-scripting-jvm = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm", version.ref = "kotlin" }
kotlin-scripting-jvm-host = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm-host", version.ref = "kotlin" }
kotlin-scripting-jvm-host-embeddable = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm-host-embeddable", version.ref = "kotlin" }
kotlin-scripting-jvm-host-test = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm-host-test", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdlib-common = { module = "org.jetbrains.kotlin:kotlin-stdlib-common", version.ref = "kotlin" }
kotlin-stdlib-jdk7 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-stdlib-js = { module = "org.jetbrains.kotlin:kotlin-stdlib-js", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-test-common = { module = "org.jetbrains.kotlin:kotlin-test-common", version.ref = "kotlin" }
kotlin-test-js = { module = "org.jetbrains.kotlin:kotlin-test-js", version.ref = "kotlin" }
kotlin-test-js-runner = { module = "org.jetbrains.kotlin:kotlin-test-js-runner", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
kotlin-test-testng = { module = "org.jetbrains.kotlin:kotlin-test-testng", version.ref = "kotlin" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
kotlinx-nodejs = { module = "org.jetbrains.kotlinx:kotlinx-nodejs", version.ref = "kotlinx-nodejs" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
ktor-client-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-client-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
material = { module = "com.google.android.material:material", version.ref = "material" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito-junit-jupiter" }
mockito-kotlin = { module = "com.nhaarman.mockitokotlin2:mockito-kotlin", version.ref = "mockito-kotlin" }
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform-settings" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
okhttp-mock = { module = "com.github.gmazzo:okhttp-mock", version.ref = "okhttp-mock" }
plugin-android = { module = "com.android.tools.build:gradle", version.ref = "android" }
plugin-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicfu" }
plugin-binary-compatibility-validator = { module = "org.jetbrains.kotlinx:binary-compatibility-validator", version.ref = "binary-compatibility-validator" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
plugin-gradle-versions = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradle-versions" }
plugin-hilt = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
plugin-jetbrains-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "jetbrains-compose" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
plugin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
plugin-sqldelight = { module = "com.squareup.sqldelight:com.squareup.sqldelight.gradle.plugin", version.ref = "sqldelight" }
reflect-lite = { module = "org.jetbrains.kotlinx:kotlinx.reflect.lite", version.ref = "reflect-lite" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "slf4j" }
sqldelight-android-driver = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
tschuchortdev-kotlin-compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "tschuchortdev-kotlin-compile-testing" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
xmlunit-core = { module = "org.xmlunit:xmlunit-core", version.ref = "xmlunit" }
xmlunit-matchers = { module = "org.xmlunit:xmlunit-matchers", version.ref = "xmlunit" }

[bundles]

plugins = [
    "plugin-android",
    "plugin-gradle-versions",
    "plugin-jetbrains-compose",
    "kotlin-gradle-plugin",
    "plugin-serialization",
    "plugin-atomicfu",
    "plugin-ksp",
    "plugin-binary-compatibility-validator"
]

common-ui = [
    "decompose-jetbrains",
    "jetbrains-compose-runtime",
    "jetbrains-compose-material",
    "jetbrains-compose-foundation",
    "jetbrains-compose-ui",
    "jetbrains-compose-ui-util",
    "jetbrains-compose-material-icons-extended"
]
android-ui = [
    "material",
    "androidx-core-ktx",
    "androidx-appcompat",
    "androidx-activity-ktx",
    "androidx-activity-compose",
    "androidx-lifecycle-common",
    "androidx-compose-runtime",
    "androidx-compose-runtime-saveable",
    "androidx-compose-foundation",
    "androidx-compose-foundation-layout",
    "androidx-compose-animation-core",
    "androidx-compose-ui",
    "androidx-compose-ui-tooling",
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-material"
]
desktop-ui = [
    "jetbrains-compose-desktop-common"
]

common-data = [
    "decompose",
    "coroutines-core",
    "serialization-json",
    "ktor-client-core",
    "ktor-client-json",
    "ktor-client-logging",
    "ktor-client-serialization-json",
    "ktor-client-content-negotiation"
]
android-data = [
    "coroutines-android",
    "ktor-client-okhttp"
]
desktop-data = [
    "coroutines-swing",
    "ktor-client-okhttp"
]


common-test = [
    "kotlin-test"
]
android-test = [
    "junit-jupiter-api",
    "junit-jupiter-engine",
    "junit-jupiter-params",
    "junit-platform-suite"
]
desktop-test = [
    "mockito-kotlin",
    "kotlin-reflect",
    "assertj-core"
]

accompanist-full = [
    "accompanist-insets-ui",
    "accompanist-navigation-animation",
    "accompanist-navigation-material",
    "accompanist-permissions",
    "accompanist-swiperefresh",
    "accompanist-systemuicontroller"
]

jetbrains-compose-full = [
    "jetbrains-compose-runtime",
    "jetbrains-compose-runtime-saveable",
    "jetbrains-compose-foundation",
    "jetbrains-compose-foundation-layout",
    "jetbrains-compose-animation-core",
    "jetbrains-compose-ui",
    "jetbrains-compose-material"
]

androidx-compose-full = [
    "androidx-compose-runtime",
    "androidx-compose-runtime-saveable",
    "androidx-compose-foundation",
    "androidx-compose-foundation-layout",
    "androidx-compose-animation-core",
    "androidx-compose-ui",
    "androidx-compose-ui-tooling",
    "androidx-compose-ui-tooling-preview",
    "androidx-compose-material"
]

multiplatform-settings = [
    "multiplatform-settings",
    "multiplatform-settings-coroutines",
    "multiplatform-settings-serialization"
]
